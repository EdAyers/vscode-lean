{
	"name": "lean",
	"displayName": "lean",
	"description": "An extension for VS Code which provides support for the Lean language.",
	"version": "0.13.0",
	"publisher": "jroesch",
	"engines": {
		"vscode": "^1.24.0"
	},
	"categories": [
		"Programming Languages"
	],
	"repository": "https://github.com/leanprover/vscode-lean",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Lean configuration",
			"properties": {
				"lean.executablePath": {
					"type": "string",
					"default": "lean",
					"description": "Path to the Lean executable to use."
				},
				"lean.leanpkgPath": {
					"type": "string",
					"default": "leanpkg",
					"description": "Path to the leanpkg executable to use."
				},
				"lean.memoryLimit": {
					"type": "number",
					"default": 4096,
					"description": "Set a memory limit (in megabytes) for the Lean server."
				},
				"lean.timeLimit": {
					"type": "number",
					"default": 100000,
					"description": "Set a deterministic timeout (it is approximately the maximum number of memory allocations in thousands) for the Lean server."
				},
				"lean.extraOptions": {
					"type": "array",
					"default": [],
					"description": "Extra command-line options for the Lean server.",
					"items": {
						"type": "string",
						"description": "Single command-line argument."
					}
				},
				"lean.progressMessages": {
					"type": "boolean",
					"default": false,
					"description": "Show error messages where Lean is still checking."
				},
				"lean.roiModeDefault": {
					"type": "string",
					"default": "visible",
					"description": "Set the default region of interest mode (nothing, visible, lines, linesAndAbove, open, or project) for the Lean extension."
				},
				"lean.input.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enable Lean input mode"
				},
				"lean.input.customTranslations": {
					"type": "object",
					"items": {
						"type": "string",
						"description": "Unicode character to translate to."
					},
					"default": {},
					"description": "Add additional input unicode translations. Example: `{\"foo\": \"☺\"}` will correct `\\foo` to `☺`."
				},
				"lean.input.languages": {
					"type": "array",
					"default": [
						"lean"
					],
					"description": "Enable Lean unicode input in other file types.",
					"items": {
						"type": "string",
						"description": "the name of a language. Eg: 'lean', 'markdown' "
					}
				},
				"lean.input.leader": {
					"type": "string",
					"default": "\\",
					"description": "Leader key to trigger input mode"
				},
				"lean.infoViewAllErrorsOnLine": {
					"type": "boolean",
					"default": false,
					"description": "Info view: show all errors on the current line, instead of just the ones on the right of the cursor."
				},
				"lean.infoViewStyle": {
					"type": "string",
					"default": "",
					"description": "Add an additional CSS snippet to the info view."
				}
			}
		},
		"commands": [
			{
				"command": "lean.restartServer",
				"category": "Lean",
				"title": "Restart",
				"description": "Restart the Language Server"
			},
			{
				"command": "lean.input.convert",
				"category": "Lean",
				"title": "Input: convert current abbreviation",
				"description": "converts the current abbreviation (e.g. \\lam)"
			},
			{
				"command": "lean.displayGoal",
				"category": "Lean",
				"title": "Info View: Display Goal",
				"description": "Display the goal at the current position.",
				"icon": {
					"dark": "./media/display-goal-dark.svg",
					"light": "./media/display-goal-light.svg"
				}
			},
			{
				"command": "lean.displayList",
				"category": "Lean",
				"title": "Info View: Display Messages",
				"description": "Displays the goal state or messages in a separate window",
				"icon": {
					"dark": "./media/display-list-dark.svg",
					"light": "./media/display-list-light.svg"
				}
			},
			{
				"command": "lean.infoView.displayGoal",
				"category": "Lean",
				"title": "Info View: Display Goal",
				"description": "Display the goal at the current position",
				"icon": {
					"dark": "./media/display-goal-dark.svg",
					"light": "./media/display-goal-light.svg"
				}
			},
			{
				"command": "lean.infoView.displayList",
				"category": "Lean",
				"title": "Info View: Display Messages",
				"description": "Displays the goal state or messages in a separate window",
				"icon": {
					"dark": "./media/display-list-dark.svg",
					"light": "./media/display-list-light.svg"
				}
			},
			{
				"command": "lean.infoView.copyToComment",
				"category": "Lean",
				"title": "Info View: copy contents to comment",
				"description": "Copy the current contents of the info view into a new comment on the next line"
			},
			{
				"command": "lean.infoView.toggleUpdating",
				"category": "Lean",
				"title": "Info View: toggle updating",
				"description": "Pause / Continue the live updating in the info view"
			},
			{
				"command": "lean.roiMode.select",
				"category": "Lean",
				"title": "Select region-of-interest",
				"description": "Select what files are being checked by the Lean server."
			},
			{
				"command": "lean.roiMode.nothing",
				"category": "Lean",
				"title": "Check Nothing",
				"description": "Disable automatic checking of Lean code"
			},
			{
				"command": "lean.roiMode.cursor",
				"category": "Lean",
				"title": "Check Cursor + 5 Lines",
				"description": "Automatically check until 5 lines below the cursor"
			},
			{
				"command": "lean.roiMode.visibleFiles",
				"category": "Lean",
				"title": "Check Visible Files",
				"description": "Automatically check all files that are visible"
			},
			{
				"command": "lean.roiMode.openFiles",
				"category": "Lean",
				"title": "Check Open Files",
				"description": "Automatically check all opened files"
			},
			{
				"command": "lean.roiMode.projectFiles",
				"category": "Lean",
				"title": "Check Project Files",
				"description": "Automatically check all files in the workspace"
			},
			{
				"command": "lean.batchExecute",
				"category": "Lean",
				"title": "Batch Execute File",
				"description": "Execute the current file using Lean"
			}
		],
		"languages": [
			{
				"id": "lean",
				"aliases": [
					"Lean",
					"lean"
				],
				"extensions": [
					".lean"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "lean",
				"scopeName": "source.lean",
				"path": "./syntaxes/lean.json"
			}
		],
		"keybindings": [
			{
				"command": "lean.displayGoal",
				"key": "ctrl+shift+enter",
				"mac": "cmd+shift+enter",
				"when": "editorTextFocus && editorLangId == lean"
			},
			{
				"command": "lean.displayList",
				"key": "ctrl+shift+alt+enter",
				"mac": "cmd+shift+alt+enter",
				"when": "editorTextFocus && editorLangId == lean"
			},
			{
				"command": "lean.input.convert",
				"key": "tab",
				"mac": "tab",
				"when": "editorTextFocus && editorLangId == lean && lean.input.isActive"
			},
			{
				"command": "lean.batchExecute",
				"key": "ctrl+shift+r",
				"mac": "cmd+shift+r",
				"when": "editorTextFocus && editorLangId == lean"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "lean.displayGoal",
					"when": "editorLangId == lean"
				},
				{
					"command": "lean.displayList",
					"when": "editorLangId == lean"
				},
				{
					"command": "lean.input.convert",
					"when": "editorLangId == lean && lean.input.isActive"
				},
				{
					"command": "lean.batchExecute",
					"when": "editorLangId == lean"
				},
				{
					"command": "lean.infoView.copyToComment",
					"when": "editorLangId == lean"
				},
				{
					"command": "lean.infoView.displayGoal",
					"when": "resourceSchema == lean-info"
				},
				{
					"command": "lean.infoView.displayList",
					"when": "resourceSchema == lean-info"
				}
			],
			"editor/title": [
				{
					"command": "lean.displayList",
					"when": "editorLangId == lean",
					"group": "navigation"
				},
				{
					"command": "lean.displayGoal",
					"when": "editorLangId == lean",
					"group": "navigation"
				},
				{
					"command": "lean.infoView.displayList",
					"when": "resourceScheme == lean-info",
					"group": "navigation"
				},
				{
					"command": "lean.infoView.displayGoal",
					"when": "resourceScheme == lean-info",
					"group": "navigation"
				}
			]
		}
	},
	"activationEvents": [
		"onLanguage:lean",
		"onLanguage:markdown",
		"onCommand:lean.restartSever",
		"onCommand:lean.infoDocument.toggleMode",
		"onCommand:lean.roiMode.select",
		"onCommand:lean.roiMode.nothing",
		"onCommand:lean.roiMode.cursor",
		"onCommand:lean.roiMode.visibleFiles",
		"onCommand:lean.roiMode.openFiles",
		"onCommand:lean.roiMode.projectFiles"
	],
	"main": "./out/src/extension",
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"compile": "tsc -watch -p ./",
		"lint": "tslint -c tslint.json src/*.ts",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "node ./node_modules/vscode/bin/test"
	},
	"dependencies": {
		"carrier": "0.3.0",
		"hasbin": "^1.2.3",
		"lean-client-js-node": "^1.2.12",
		"load-json-file": "5.1.0",
		"username": "^4.0.0"
	},
	"devDependencies": {
		"@types/load-json-file": "^2.0.7",
		"@types/mocha": "^5.2.5",
		"@types/node": "^10.12.0",
		"@types/semver": "^5.5.0",
		"@types/username": "^3.0.0",
		"mocha": "^5.2.0",
		"tslint": "^5.11.0",
		"typescript": "^3.1.3",
		"vsce": "^1.52.0",
		"vscode": "^1.1.21"
	},
	"icon": "images/lean_logo.png",
	"license": "Apache-2.0",
	"__metadata": {
		"id": "e5e5c0e2-0fb3-4f00-9c79-5b15f9ff8430",
		"publisherDisplayName": "jroesch",
		"publisherId": "7875b14e-7883-4853-ac79-bfe9296fab82"
	}
}
